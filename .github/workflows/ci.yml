---
name: CI

on:
  workflow_call:
    inputs:
      java_version:
        description: Java version to use for publishing artifacts
        type: string
        required: false
        default: 17
      java_test_versions:
        description: Java versions to use for testing the project
        type: string
        required: false
        default: '[11, 17, 21]'
      publish_snapshots:
        description: Whether to attempt publishing snapshots. When false, the workflow will only run build.
        type: boolean
        default: true
        required: false
    secrets:
      ossrh_username:
        required: true
      ossrh_password:
        required: true
      ossrh_signing_key:
        required: false
      ossrh_signing_password:
        required: false
      sonar_token:
        required: true

jobs:
  build:
    name: Build with java ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java_version: ${{ fromJson(inputs.java_test_versions) }}
    steps:
      - uses: actions/checkout@v3
      - uses: ts-graphviz/setup-graphviz@v1
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java_version }}
          cache: 'maven'
      - uses: s4u/maven-settings-action@v3.0.0
        with:
          sonatypeSnapshots: true
      - name: test with java ${{ matrix.java_version }}
        run: mvn --batch-mode --update-snapshots -P IT verify

  publish-snapshots:
    runs-on: ubuntu-latest
    needs: build
    if: inputs.publish_snapshots && github.repository_owner == 'jqassistant-plugin' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: ts-graphviz/setup-graphviz@v1
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ inputs.java_version }}
          cache: 'maven'
          server-id: sonatype-nexus-snapshots
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.ossrh_signing_key }}
          gpg-passphrase: OSSRH_SIGNING_PASSWORD
      - uses: s4u/maven-settings-action@v3.0.0
        with:
          sonatypeSnapshots: true
      - name: publish-snapshots
        run: mvn deploy --batch-mode -P sonar -DskipTests
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          OSSRH_SIGNING_PASSWORD: ${{ secrets.OSSRH_SIGNING_PASSWORD }}
          SONARCLOUD_LOGIN: ${{ secrets.SONAR_TOKEN }}

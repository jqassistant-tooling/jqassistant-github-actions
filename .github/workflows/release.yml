---
name: release

on:
  workflow_call:
    inputs:
      java_version:
        description: Java version to use
        type: string
        required: false
        default: 17
      releaseVersion:
        description: "Default version to use when preparing a release."
        type: string
        required: true
      developmentVersion:
        description: "Default version to use for new local working copy."
        type: string
        required: true
      dryRun:
        description: "Perform a dry run"
        required: true
        default: 'false'
        type: string
      assets:
        description: "Path expression for Assets to upload."
        type: string
        required: false
        default: ""
      pages:
        description: "Path expression for Pages to upload."
        type: string
        required: false
        default: ""
    secrets:
      ossrh_username:
        required: true
      ossrh_password:
        required: true
      ossrh_signing_key:
        required: true
      ossrh_signing_password:
        required: true
      sonar_token:
        required: true

permissions:
  contents: write

jobs:
  release:
    name: Release on Sonatype OSS
    if: contains(fromJSON('["buschmais", "jqassistant-plugin", "jqassistant-tooling", "jQAssistant"]'), github.repository_owner)
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - uses: ts-graphviz/setup-graphviz@v1

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ inputs.java_version }}
          cache: 'maven'
          server-id: sonatype-nexus-staging
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.OSSRH_SIGNING_KEY }}
          gpg-passphrase: OSSRH_SIGNING_PASSWORD

      - name: Prepare and perform release
        run: mvn release:prepare release:perform -ntp --batch-mode -DreleaseVersion=${{ inputs.releaseVersion }} -DdevelopmentVersion=${{ inputs.developmentVersion }} -DdryRun=${{ inputs.dryRun }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          OSSRH_SIGNING_PASSWORD: ${{ secrets.OSSRH_SIGNING_PASSWORD }}
          SONARCLOUD_LOGIN: ${{ secrets.SONAR_TOKEN }}

      - name: Create Release Assets
        if: ${{ inputs.assets != '' }}
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ inputs.releaseVersion }}
          draft: true
          files: ${{ inputs.assets }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: true

      - name: Deploy Page artifact
        id: deployment
        if: ${{ needs.check-directory.outputs.directory_exists == 'true'}}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ inputs.pages }}
          cname: ${{ env.GITHUB_PAGES_URL }}
